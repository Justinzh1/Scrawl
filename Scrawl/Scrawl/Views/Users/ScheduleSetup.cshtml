@{
    ViewBag.Title = "Schedule";
    Layout = "~/Views/Home/_LandingLayout.cshtml";
}
<div class="centered"><span class="glyphicon glyphicon-calendar centered-glyphicon" aria-hidden="true"></span></div>

<div id="form_wrapper" class="form_wrapper">
    @* TODO: Autofocus all text boxes *@ @* TODO: Make back buttons *@
    <form class="scheduler-greeting active">
        @* start of form because of "active" class *@
        <div class="scheduler-greeting">
            
            <div>
                Your notes. Your schedule.
            </div>
            <a class="btn next-button linkform" role="button" id="class-search-form">
                <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
            </a>
        </div>
    </form>

    @* Class Search *@
    <form class="class-search-form">
        @* TODO: Make this actually work *@
        
        <div class="scheduler-container">
            <h1 class="setup-header">Let's see if we know about your class already.</h1>
            <p class="big-search-box">
                <input type="text" class="scheduler-textbox" id="textbox" />
            </p>
            <div class="textbox-alternative linkform" id="class-name-input"><a class="orange-link">(Or tell us about your class manually by clicking here.)</a></div>
        </div>
        <div class="scheduler-search-help">
            <span class="glyphicon glyphicon-question-sign help-icon-inline" aria-hidden="true">
            </span>Go ahead and enter a course name, teacher's last name, school name, or any combination of the three.
        </div>

        <input class="linkform" type="submit" style="position: absolute; width: 1px; height: 1px; left: -9999px;" tabindex="-1" id="class-search-results-form" />
    </form>
    <form class="class-search-results-form"> @* TODO: Make this actually display results *@
        
        <div class="scheduler-container">
            <h1 class="setup-header">Here's what we found.</h1>
            <div class="class-search-result">
                <div class="centered"><span class="glyphicon glyphicon-remove large-not-found" aria-hidden="true"></span></div>
                
                <div class="large-not-found">Nothing, unfortunately.</div>
                <a class="linkform" id="class-name-input">
                    <div class="scheduler-search-help">
                        <span class="glyphicon glyphicon-question-sign help-icon-inline" aria-hidden="true">
                        </span>Click here to tell us about your class manually.
                    </div>
                </a>
            </div>
        </div>
        <input class="linkform" type="submit" style="position: absolute; width: 1px; height: 1px; left: -9999px;" tabindex="-1"/>
    </form>
    
    @* Manual Class Input *@
    <form class="class-name-input">
        
        <div class="scheduler-container">
            <h1 class="setup-header">What's your course called?</h1>
            <p class="setup-textbox">
                <input type="text" class="scheduler-textbox" id="textbox" />
            </p>
        </div>
        <input class="linkform" type="submit" style="position: absolute; width: 1px; height: 1px; left: -9999px;" tabindex="-1" id="teacher-input" />
    </form>

    <form class="teacher-input">
        
        <div class="scheduler-container">
            <h1 class="setup-header">What's your teacher's/professor's/instructor's last name?</h1>
            <p class="setup-textbox">
                <input type="text" class="scheduler-textbox" id="textbox" />
            </p>
        </div>
        <input class="linkform" type="submit" style="position: absolute; width: 1px; height: 1px; left: -9999px;" tabindex="-1" />
    </form>
</div>

@*
    ~Form Transition Handling~
        Starting form must have class="specific-form-class active" (see name-form).
        The form's class must be referenced in the id field of the submit. Ex: we want name-form to transition to email-form, so "email-form" is in name-form's submit id
        Forms are in chronological order. TODO: Make 'Back' button for form
*@
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript">
    $(function () {
        //the form wrapper (includes all forms)
        var $form_wrapper = $('#form_wrapper'),
            //the current form is the one with class active
            $currentForm = $form_wrapper.children('form.active'),
            //the change form links
            $linkform = $form_wrapper.find('.linkform');

        //get width and height of each form and store them for later
        $form_wrapper.children('form').each(function (i) {
            var $theForm = $(this);
            //solve the inline display none problem when using fadeIn fadeOut
            if (!$theForm.hasClass('active'))
                $theForm.hide();
            $theForm.data({
                width: $theForm.width(),
                height: $theForm.height()
            });
        });

        //set width and height of wrapper (same of current form)
        setWrapperWidth();

        /*
        clicking a link (change form event) in the form
        makes the current form hide.
        The wrapper animates its width and height to the
        width and height of the new current form.
        After the animation, the new form is shown
        */
        $linkform.bind('click', function (e) {
            var $link = $(this);
            var target = $link.attr('id');
            $currentForm.fadeOut(400, function () {
                //remove class active from current form
                $currentForm.removeClass('active');
                //new current form
                $currentForm = $form_wrapper.children('form.' + target);
                //animate the wrapper
                $form_wrapper.stop()
                             .animate({
                                 width: $currentForm.data('width') + 'px',
                                 height: $currentForm.data('height') + 'px'
                             }, 500, function () {
                                 //new form gets class active
                                 $currentForm.addClass('active');
                                 //show the new form
                                 $currentForm.fadeIn(400);
                                 $currentForm.find('input').focus();
                             });
            });
            e.preventDefault();
        });

        function setWrapperWidth() {
            $form_wrapper.css({
                width: $currentForm.data('width') + 'px',
                height: $currentForm.data('height') + 'px'
            });
        }

        /*
        for the demo we disabled the submit buttons
        if you submit the form, you need to check the
        which form was submited, and give the class active
        to the form you want to show
        */
        $form_wrapper.find('input[type="submit"]')
                     .click(function (e) {
                         e.preventDefault();
                     });
    });

</script> 